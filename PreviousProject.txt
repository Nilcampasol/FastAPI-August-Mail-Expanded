----------------------------------------------------------------------------------------- main.py

@app.post("/tasks/{note_id}")
async def add_task(note_id: int, task_data: dict):
    note = notes.get(note_id)
    if not note:
        raise HTTPException(status_code=404, detail="Note not found")
    new_task_id = max(note.task.keys(), default=0) + 1
    new_task = Task(
        id=new_task_id,
        description=task_data.get("description", ""),
        completed=task_data.get("completed", False),
        timer=task_data.get("timer", False)
        )
    note.task[new_task_id] = new_task
    return new_task

@app.patch("/tasks/{note_id}/{task_id}/done")
async def update_task_done(note_id: int, task_id: int, request: Request):
    taskdone = await request.json()
    done = taskdone.get("done")
    note = notes.get(note_id)
    if not note:
        raise HTTPException(status_code=404, detail="Note not found")
    task = note.task.get(task_id)
    if not task:
        raise HTTPException(status_code=404, detail="Task not found")
    task.completed = done

    for list_note in list_notes:
        if list_note.id == note_id:
            list_note.tasks_done = sum(1 for t in note.task.values() if t.completed)
            break
    
    return {"success": True, "tasks_done": list_note.tasks_done}

----------------------------------------------------------------------------------------- FastAPI.js

if (tasksContainer) {
                tasksContainer.addEventListener('change', async (event) => {
                    if (event.target.matches('input[type="checkbox"][data-task-id]')) {
                        const noteIdUpdate = editorMain.getAttribute('data-note-id');
                        const taskId = event.target.dataset.taskId;
                        const checked = event.target.checked;
                        const response = await fetch(`http://localhost:8000/tasks/${noteIdUpdate}/${taskId}/done`, {
                            method: 'PATCH',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ done: checked })
                        });

                        // Simplified update of tasks_done value in note item :)
                        const data = await response.json();
                        const metaTasks = document.querySelector(`.note-item[data-id="${noteIdUpdate}"] .meta-tasks`);
                        if (metaTasks) {
                            metaTasks.innerHTML = metaTasks.innerHTML.replace(/(\d+)\//, `${data.tasks_done}/`);
                        }
                    }
                });
            }

function saveNewTasksToBackend() {
    const addTaskBtn = document.querySelector('.add-task-btn');
    
    addTaskBtn.addEventListener('click', async () => {
        const noteId = document.querySelector('.editor-main').getAttribute('data-note-id');
        const taskDescription = prompt('Enter task description:') || 'Default task description';
        const response = await fetch(`http://localhost:8000/tasks/${noteId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ description: taskDescription })
        });
    });
}

